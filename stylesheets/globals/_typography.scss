body * {
  transition: all .15s;
}

body {
  color: map-get($colors, body);
  font-family: Baseline Em; // Baselined font on all elements
}

.baseline {
  line-height: 1;
  font-family: Baseline Em; // Baselined font on all elements
}
.baseline span {line-height: 0;}

h1 {
  margin-bottom: 4 * $gridSize; // margins should be mults of grid
  margin-top: 3 * $gridSize; // margins should be mults of grid
  font-size: 8*$gridSize;
  color: map-get($colors, h1);
  text-align: center;
  span {font-size: 160px; font-family: map-get($fonts, h1); font-weight: 300;}
  
  // Reponsive
  @include respond-to(small) {
    display: none;
  }
  @include respond-to(medium) {
    font-size: 7*$gridSize;
    span {font-size: 120px;}
  }
}

h2 {
  color: map-get($colors, h2);
  margin-top: 3 * $gridSize; // margins should be mults of grid
  font-size: 2*$gridSize;
  text-align: center;
  text-transform: uppercase;
  span {font-size: 20px; font-family: map-get($fonts, h2); font-weight: 700;}
    
  // Responsive
  @include respond-to(small) {
    margin-top: 2 * $gridSize;
    font-size: $gridSize;
    span {font-size: 16px;}
  }
}
  
h3 {
  color: map-get($colors, h3);
  margin-bottom: 6 * $gridSize; // margins should be mults of grid
  font-size: 3*$gridSize;
  text-align: center;
  position: relative;
  overflow: visible;
  span {font-size: 50px; font-family: map-get($fonts, h3); font-weight: 700;}
  
  // Responsive
  @include respond-to(small) {
    margin-bottom: 3 * $gridSize;
    margin-top: 0;
    font-size: 2*$gridSize;
    span {font-size: 28px;}
  }
}

h3 span { /* Adding line underneath */
  position: relative;
}

h3 span:after { /* Adding line underneath */
  content: '';
  position: absolute;
  left: 10%;
  bottom: -30px;
  width: 80%;
  height: 4px;
  background-color: $blue;
  @include respond-to(small) {
    bottom: -15px;
  }
}

main a {
  color: map-get($colors, a);
  font-weight: 700;
  text-decoration: none;
  border-bottom: 3px solid $blue;
  padding-bottom: 7px;
  transition: .15s;
  &:hover {
    cursor: pointer;
    border-color: $midnightblue;
    color: $midnightblue;
  }
  // Responsive
  @include respond-to(small) {
    border-bottom: none;
  }
}

pre {
  background-color: rgba(0, 156, 252, .05);
  border-radius: 7px;
  font-size: 0;
  margin: 0;
  padding: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}

code {
  color: map-get($colors, code);
  font-size: 2*$gridSize;
  span {font-size: 20px; font-family: map-get($fonts, code);}
  
  // Responsive
  @include respond-to(small) {
    font-size: $gridSize;
    span {font-size: 14px;}
  }
}

ul {
  margin-bottom: $gridSize; // margins should be mults of grid
}

p, li {
  color: map-get($colors, body);
  margin-bottom: $gridSize; // margins should be mults of grid
  font-size: 2*$gridSize;
  span {font-size: 24px; font-family: map-get($fonts, body); font-weight: 300;}
  
  // Responsive
  @include respond-to(small) {
    font-size: $gridSize;
    span {font-size: 17px}
  }
}

ol {
  margin: $gridDouble 0 $gridDouble $gridTriple; // margins should be mults of grid
}

li:before {
  content: '\25AA';
  position: absolute;
  margin-left: -$gridSize;
  font-size: 24px;
  margin-top: (2*$gridSize) - 25px;
  color: $blue;
  
  // Responsive
  @include respond-to(small) {
    font-size: 16px;
    margin-top: $gridSize - 16px;
  }
}

li {
  position: relative;
  padding-left: $gridSize;
}

strong {
  color: map-get($colors, strong);
  font-weight: 500;
}

.single-out {
  background: rgba(0, 156, 252, .09);
  padding: .15em .6em .4em .6em;
  border-radius: 5px;
  white-space: nowrap;
  font-size: 20px;
  font-weight: 700;
  
  // Responsive
  @include respond-to(small) {
    font-size: 15px;
    padding: .01em .5em .3em .5em;
  }
}

.small {
  font-size: $gridSize;
  margin-bottom: $gridSize
  span {font-size: 15px;}
}

.comment {
  color: rgba(0,0,0,.3)
}

.txt-blue {
  color: $blue;
}
